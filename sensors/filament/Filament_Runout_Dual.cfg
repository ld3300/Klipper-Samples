###########################################################
#
# Example setup for dual extruder filament runout sensors
# Printer has single hot end and Y joiner inline
# Pins are using pin aliases
# Many of these Macros are also used when dual color printing
#
###########################################################

########## SENSOR SETUPS

# Filament sensor for extruder0
[filament_switch_sensor fsensor0]
switch_pin: ^!PIN_RUNOUTSENSE0      # pull-up and invert pin
pause_on_runout: True
runout_gcode:
    M117 Ext0 Runout detected
    # Message that is reported back to octoprint for feedback
    RESPOND TYPE=command MSG="Extruder 0 Filament Runout"
    # gcode macro that is called when detected
    RUNOUT_EXTR0

# Filament sensor for extruder1
[filament_switch_sensor fsensor1]
switch_pin: ^!PIN_RUNOUTSENSE1
pause_on_runout: True
runout_gcode:
    M117 Ext1 Runout detected
    RESPOND TYPE=command MSG="Extruder 1 Filament Runout"
    RUNOUT_EXTR1


########## GCODE MACROS

[pause_resume]      # required for pause and resume commands

# Have custom G-code in my slicer to tell Klipper how many extruders available
[gcode_macro SLICER_CONFIG]
default_parameter_EXTRUDERS: 1          # Slicer declares num extruders
default_parameter_RUNOUT_BACKUP: 0      # Slicer declares if T1 is runout backup for T0
gcode:
    RESPOND TYPE=echo MSG="NUM Extruders = {EXTRUDERS}"
    RESPOND TYPE=echo MSG="runout_backup = {RUNOUT_BACKUP}"
    NUM_EXTRUDERS S="{EXTRUDERS}"
    FILAMENT_BACKUP S="{RUNOUT_BACKUP}"

[gcode_macro NUM_EXTRUDERS]
default_parameter_S: 1          # if not declared assume 1
variable_num_extruders: 1       # if not called assume 1
gcode:
    M117 {S}
    RESPOND TYPE=echo MSG="NUM Extruders = {S}"
    SET_GCODE_VARIABLE MACRO=NUM_EXTRUDERS VARIABLE=num_extruders VALUE={S} # Save number of extruders to variable

[gcode_macro FILAMENT_BACKUP]             # Store if EXT1 is filament backup for EXT0
default_parameter_S: 0
variable_ext1_bkup: 0
gcode:
    M117 {S}
    RESPOND TYPE=echo MSG="EXT1 as Backup = {S}"
    SET_GCODE_VARIABLE MACRO=FILAMENT_BACKUP VARIABLE=ext1_bkup VALUE={S}

# Store extruder park state
[gcode_macro STATE_extruder]
default_parameter_PARK: 1
variable_parked: 1
gcode:
    SET_GCODE_VARIABLE MACRO=STATE_extruder VARIABLE=parked VALUE={PARK|int}
    RESPOND TYPE=command MSG="({PARK|int})"

[gcode_macro STATE_extruderONE]     # (ONE Spelled because of klipper bug that has since been fixed)
default_parameter_PARK: 1
variable_parked: 1
gcode:
    SET_GCODE_VARIABLE MACRO=STATE_extruderONE VARIABLE=parked VALUE={PARK|int}
    RESPOND TYPE=command MSG="({PARK|int})"


# Runout script for Extruder 0
[gcode_macro RUNOUT_EXTR0]                                                  # EXT0 detected runout
gcode:
    # Disable filament sensor to prevent unintentional triggers while loading
    SET_FILAMENT_SENSOR SENSOR=fsensor0 ENABLE=0                            # disable filament sensor
    # Check if Extruder 1 is setup as backup for Extruder 0 and will switch over automatically
    {% if printer["gcode_macro NUM_EXTRUDERS"].num_extruders > 1 %}         # if we have more than 1 extruder
        {% if printer["gcode_macro FILAMENT_BACKUP"].ext1_bkup == 1 %}      # if EXT1 is set to be backup
            SWAP_EXTRUDER EXTR=extruder1                                    # Park active and load this extruder
            SET_FILAMENT_SENSOR SENSOR=fsensor1 ENABLE=1                    # enable filament sensor1
        {% else %}
            M600
        {% endif %}
    {% else %}
        M600                # Unload and wait
    {% endif %}

# Runout script for Extruder 1
[gcode_macro RUNOUT_EXTR1]
gcode:
    M117 Ext1 Runout detected
    RESPOND TYPE=command MSG="Extruder 1 Filament Runout"
    SET_FILAMENT_SENSOR SENSOR=fsensor1 ENABLE=0                # disable filament sensor
    M600

# Runout handle sequences
[gcode_macro M600]                  # on M600 run Pause and alert
gcode:
    SAVE_GCODE_STATE NAME=M600_State
    SET_FILAMENT_SENSOR SENSOR=fsensor0 ENABLE=0    # disable filament sensor
    SET_FILAMENT_SENSOR SENSOR=fsensor1 ENABLE=0    # disable filament sensor
    M300 S900 P300                  # Ring buzzer at 900Hz for 300ms
    PAUSE_MACRO

[gcode_macro PAUSE_MACRO]           # run Macro to park head and pause gcode
gcode:
    SET_GCODE_VARIABLE MACRO=RESUME_MACRO VARIABLE=restore_state VALUE=1      # restore when resume
    PAUSE                           # generic tell print to pause
    M300 S900 P300                  # Ring buzzer at 900Hz for 300ms
    PARK_MACRO                      # Move Nozzle to safe location away from print (prevent heat divit)

# For parking hot end
[gcode_macro PARK_MACRO]            # set Park positions and move
default_parameter_X: 235            # my filament system switches better when bowden tubes extended
default_parameter_Y: 0
default_parameter_Z: 20             # lift Z
gcode:
    M117 PARKING..
    G92 E0                  # Set exturder position to 0
    G91                     # Relative movement
    M83                     # relative extrude
    G1 E-3.14 F1500         # retract a little
    G1 Z{Z}                 # Lift Z (Ought to have check for max height)
    G90                     # Absolute positioning
    M82                     # Absolute Extruder
    G1 X{X} Y{Y} F3000      # Move X and Y to parameters
    M117 Nozzle Parked

# When done loading filament.  Make sure this is in resume gcode in octoprint
[gcode_macro RESUME_MACRO]
variable_restore_state: 0
gcode:
    {% if printer["gcode_macro RESUME_MACRO"].restore_state == 1 %}         # do following only if filament reload
        SET_FILAMENT_SENSOR SENSOR=fsensor0 ENABLE=1                        # reenable filament sensor
        {% if printer["gcode_macro NUM_EXTRUDERS"].num_extruders > 1 %}     # if we have more than 1 extruder
            SET_FILAMENT_SENSOR SENSOR=fsensor1 ENABLE=1                    # reenable filament sensor
        {% endif %}
        M117  RESUMING...
        RESTORE_GCODE_STATE NAME=M600_State MOVE=1 MOVE_SPEED=1500          # Restore state including xyz positions
        SET_GCODE_VARIABLE MACRO=RESUME_MACRO VARIABLE=restore_state VALUE=0      # restore when resume
        RESUME
    {% endif %}
    CLEAR_PAUSE         # Helps make sure pause works correctly next time if resumed from octoprint

# Swap Extruders
[gcode_macro SWAP_EXTRUDER]
default_parameter_EXTR: extruder                    # Extruder to switch to
gcode:
    {% if (printer.toolhead.extruder) != (EXTR) %}  # Check if already selected
        SAVE_GCODE_STATE NAME=swap_state            # Save printer state
        {% if printer.toolhead.homed_axes %}        # Double check homed axes, may want to switch without homing
            G90
            G1 X235 Y-2 F2000                       # Move to just off bed for clean switch
        {% endif %}
        PARK_{printer.toolhead.extruder}            # Pull filament out of hot end
        LOAD_{EXTR}                                 # Load selected extruder filament
        RESTORE_GCODE_STATE NAME=swap_state
    {% endif %}

# Codes that retract filament out of hot end
[gcode_macro PARK_extruder]
gcode:
    {% if not printer["gcode_macro STATE_extruder"].parked == 1 %}  # First check if already in park state
        RESPOND TYPE=echo MSG="Parking Extruder0"
        PARK_MOVE                 # Execute the filament park
        STATE_extruder PARK=1     # Set extruder state as parked
    {% else %}
        RESPOND TYPE=echo MSG="Extruder0 already Parked"
    {% endif %}

[gcode_macro PARK_extruder1]
gcode:
    {% if not printer["gcode_macro STATE_extruderONE"].parked == 1 %}
        RESPOND TYPE=echo MSG="Parking Extruder1"
        PARK_MOVE
        STATE_extruderONE PARK=1
    {% else %}
        RESPOND TYPE=echo MSG="Extruder1 already Parked"
    {% endif %}


# Call to pull filament to park position
[gcode_macro PARK_MOVE]
gcode:
    SAVE_GCODE_STATE NAME=park_state
    G92 E0              # Reset filament position
    G91                 # relative positioning
    G1 E-60 F5000       # I have max move limit of 100, so broken into parts
    G1 E-50 F5000       # There is a particular point in tube that is best park
    G1 E-100 F5000      # position for my setup
    G90                 # absolute positioning
    RESTORE_GCODE_STATE NAME=park_state

# Load Extruder Filament
[gcode_macro LOAD_EXTR]                     # Load Active Extruder
gcode:
    SAVE_GCODE_STATE NAME=load_state
    G92 E0                                  # Zero the extruder
    M83                                     # Relative Positioning
    # Load from parked position into nozzle. Needs to be same amount as in Park_move
    G1 E100 F5000
    G1 E60 F5000
    G1 E45 F1000
    G1 E5 F350          # Load last few mm slow to prevent extruder skipping
    M82                 # absolute positioning
    RESTORE_GCODE_STATE NAME=load_state
