######################################################################
#
# Ender 3 Pro
# MKS Gen L Board
# 5 x TMC2208 Steppers
# BL Touch
# Dual extruder modification
# Stock LCD
# Pin values are all declared in an alias file
#
######################################################################

# I have divided up gcode_macros, pin aliases, and some variable
# trackers into different config files to help find problems and
# make improvemets. The are all stored in an additional folder called
# "configs"
[include configs/*.cfg]

# Max position is larger than bed to maximize area that BL touch can
# probe. Printer is actually able to move nozzle that far off bed.
[stepper_x]
step_pin: PIN_X_STEP
dir_pin: !PIN_X_DIR
enable_pin: !PIN_X_EN
step_distance: .0125
endstop_pin: ^PIN_X_ENDSTOP
position_endstop: 0
position_min: 0
position_max: 249
homing_speed: 20

# included safe negative positions for Y so filament purge can be
# caught on edge of bed during print dual extruder setup
[stepper_y]
step_pin: PIN_Y_STEP
dir_pin: !PIN_Y_DIR
enable_pin: !PIN_Y_EN
step_distance: .0125
endstop_pin: ^PIN_Y_ENDSTOP
position_endstop: -6
position_min: -6
position_max: 232
homing_speed: 20

# Needed min position value to allow negative numbers in cases where
# bed mesh leveling determined negative z, or z offset is negative.
# endstop is setup for a BLtouch
[stepper_z]
step_pin: PIN_Z_STEP
dir_pin: PIN_Z_DIR
enable_pin: !PIN_Z_EN
step_distance: .002475
endstop_pin: probe:z_virtual_endstop
position_endstop: 0.0
position_min: -0.5
position_max: 250

# Had to increase max extrude distance because of an error in klipper
# where a possible floating point issue made an extrude of 100 cause
# an error. Cross section was increased due to needs of some filament
# change code that caused errors
[extruder]
step_pin: PIN_E_STEP
dir_pin: !PIN_E_DIR
enable_pin: !PIN_E_EN
step_distance: .007161
nozzle_diameter: 0.400
filament_diameter: 1.750
heater_pin: PIN_E_HEATER
sensor_type: EPCOS 100K B57560G104F
sensor_pin: PIN_E_SENSOR
min_temp: 0
max_temp: 255
min_extrude_temp: 150
max_extrude_only_distance: 100.1
max_extrude_cross_section: 2

# Extruder 1 is a seperate bowden tube that feeds a Y joiner before
# the hotend. Hence single heater for both hot ends
[extruder1]
step_pin: PIN_E1_STEP
dir_pin: PIN_E1_DIR
enable_pin: !PIN_E1_EN
step_distance: 0.007192
nozzle_diameter: 0.400
filament_diameter: 1.750
max_extrude_only_distance: 100.1
max_extrude_cross_section: 2
shared_heater: extruder

# TMC2208 settings. I didn't need stealthchop, so have disabled it for
# now. 2208 units are known to have some issue switching modes.
[tmc2208 stepper_x]
uart_pin: PIN_X_UART
microsteps: 16
interpolate: True 			#The default is True.
run_current: 0.7
hold_current: 0.7
sense_resistor: 0.110
stealthchop_threshold: 0	#set high to avoid transition, set to 0 to disable

[tmc2208 stepper_y]
uart_pin: PIN_Y_UART
microsteps: 16
interpolate: True 			#The default is True.
run_current: 0.7
hold_current: 0.7
sense_resistor: 0.110
stealthchop_threshold: 0	#set high to avoid transition, set to 0 to disable

[tmc2208 stepper_z]
uart_pin: PIN_Z_UART
microsteps: 16
interpolate: True 			#The default is True.
run_current: 0.7
hold_current: 0.7
sense_resistor: 0.110
stealthchop_threshold: 0	#set high to avoid transition, set to 0 to disable

[tmc2208 extruder]
uart_pin: PIN_E_UART
microsteps: 16
interpolate: True 			#The default is True.
run_current: 0.7
hold_current: 0.7
sense_resistor: 0.110
stealthchop_threshold: 0	#set high to avoid transition, set to 0 to disable

[tmc2208 extruder1]
uart_pin: PIN_E1_UART
microsteps: 16
interpolate: True 			#The default is True.
run_current: 0.8
hold_current: 0.8
sense_resistor: 0.110
stealthchop_threshold: 0	#set high to avoid transition, set to 0 to disable

# Upgraded to Glass bed, have much fewer problems
[heater_bed]
heater_pin: PIN_B_HEATER
sensor_type: EPCOS 100K B57560G104F
sensor_pin: PIN_B_SENSOR
min_temp: 0
max_temp: 105

# Had to increase the kickstart time because fan performs poorly
# starting at lower values.  Can't even run below about 30% even with
# kickstart
[fan]							# Part cooling fan
pin: PIN_FAN
kick_start_time: 1.100			# default 0.1, but ender fans are cheap

[heater_fan extruder_fan]
pin: PIN_E_FAN
max_power: 1.0
shutdown_speed: 0
cycle_time: 0.01
hardware_pwm: False			#not good for fans usually
kick_start_time: 0.100		#on at full for this long to kick start fan
heater: extruder
heater_temp: 50.0
fan_speed: 1.0				#value to set when heater on

[bltouch]
sensor_pin: ^PIN_BLTOUCH_SENSOR
control_pin: PIN_BLTOUCH_CONTROL
x_offset: -49.6
y_offset: -7.1
#z_offset = 1.075
speed: 3.0

# Have a filament runout switch right before both extruders. Each line
# has a pullup on it so triggers when pulled to ground. RUNOUT_EXTRx
# are gcode_macros that handle the states. I use the custome g-code
# section of my slicer for each print to determine the behavior of
# these commands. Can do things like pause, or have extruder1 be
# an autoswitching filament backup for extruder0.
[filament_switch_sensor fsensor0]
switch_pin: ^!PIN_RUNOUTSENSE0
pause_on_runout: True
runout_gcode:
    RESPOND TYPE=command MSG="Extruder 0 Filament Runout"
    RUNOUT_EXTR0

[filament_switch_sensor fsensor1]
switch_pin: ^!PIN_RUNOUTSENSE1
pause_on_runout: True
runout_gcode:
    RESPOND TYPE=command MSG="Extruder 1 Filament Runout"
    RUNOUT_EXTR1

# These are defaults, could probably use tuning
[printer]
kinematics: cartesian
max_velocity: 300
max_accel: 3000
max_z_velocity: 5
max_z_accel: 100

# with MKS gen L running 2 ribbon cables to display
[display]
lcd_type: st7920
cs_pin: EXP1_4
sclk_pin: EXP1_5
sid_pin: EXP1_3
encoder_pins: ^EXP2_5, ^EXP2_3
click_pin: ^!EXP1_2
#kill_pin: ^!EXP2_8
menu_timeout: 20

# Use for alerts for user interaction. Also able to play quick tunes
[output_pin beeper]
pin: EXP1_1
pwm: True
value: 0
shutdown_value: 0
cycle_time: 0.001
scale: 20000

[virtual_sdcard]
path: /home/pi/sdcard

[mcu]
serial: /dev/serial/by-id/usb-1a86_USB2.0-Serial-if00-port0
pin_map: arduino

# It is nice to be able to send commands back to the printer terminal
# "Command" type responses can be used with Octoprint "Action
# Commands" plugin to send prompts back to octoprint
[respond]
default_type: echo

[safe_z_home]
home_xy_position: 162.5, 124.5
speed: 50.0		# Speed toolhead moved safe Z home coordinate.
z_hop: 10
z_hop_speed: 20.0	#Speed at which the Z axis is lifted

# recently committed to Klipper, will enable soon
# [homing_heaters]

[bed_mesh]            #enable BED_MESH_CALIBRATE
speed: 75             #default 50
horizontal_move_z: 5  #default 5
mesh_min: 10,10       # Relative to probe position
mesh_max: 199,222     # Relative to probe position
probe_count: 5,5      #number of probe points 

[bed_screws]		#enable BED_SCREWS_ADJUST g-code
screw1: 30.5, 23
#screw1_name: Front Left Screw
screw2: 200, 23
#screw2_name: Front Right Screw
screw3: 30.5, 193
#screw3_name: rear Left Screw
screw4: 200, 193
#screw4_name: rear Right Screw
#horizontal_move_z: 5
#probe_height: 0
#probe_speed: 5


# I try to run the bed mesh and bltouch offset commands periodically
# to guarantee good values in the save config section.

#*# <---------------------- SAVE_CONFIG ---------------------->
#*# DO NOT EDIT THIS BLOCK OR BELOW. The contents are auto-generated.
#*#
#*# [extruder]
#*# control = pid
#*# pid_kp = 28.079
#*# pid_ki = 2.013
#*# pid_kd = 97.924
#*#
#*# [heater_bed]
#*# control = pid
#*# pid_kp = 74.067
#*# pid_ki = 1.335
#*# pid_kd = 1027.681
#*#
#*# [bltouch]
#*# z_offset = 1.640
#*#
#*# [bed_mesh default]
#*# version = 1
#*# points =
#*# 	  0.024750, 0.029700, 0.056925, 0.064350, -0.056925
#*# 	  0.002475, -0.004950, 0.019800, 0.027225, -0.081675
#*# 	  0.002475, -0.014850, 0.004950, -0.009900, -0.141075
#*# 	  -0.014850, -0.032175, -0.024750, -0.034650, -0.148500
#*# 	  -0.049500, -0.042075, -0.007425, 0.009900, -0.086625
#*# x_count = 5
#*# y_count = 5
#*# mesh_x_pps = 2
#*# mesh_y_pps = 2
#*# algo = lagrange
#*# tension = 0.2
#*# min_x = 10.0000000001
#*# max_x = 199.0
#*# min_y = 10.0
#*# max_y = 222.0